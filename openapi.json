{
  "openapi": "3.0.0",
  "info": {
    "title": "Blog API",
    "version": "0.0.1",
    "description": "API for authentication and account management"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api/",
      "description": "Development server"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "security": [],
        "tags": ["system"],
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "Server is alive",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pong"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/sign-up": {
      "post": {
        "security": [],
        "summary": "Create account",
        "tags": ["account"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT keypair",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/sign-in": {
      "post": {
        "security": [],
        "summary": "Login to account",
        "tags": ["account"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignInRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT keypair",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPair"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/refresh-token": {
      "post": {
        "security": [],
        "summary": "Refresh access token",
        "tags": ["account"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New access token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessToken"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/admin/token/invalidate": {
      "post": {
        "summary": "Invalidate JWT token",
        "tags": ["admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvalidateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    },
    "/admin/token/invalidate-all": {
      "post": {
        "summary": "Invalidate all JWT tokens by user id",
        "tags": ["admin"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserIdRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success message",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "default": {
            "$ref": "#/components/responses/ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "ErrorResponse": {
        "description": "Error response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "SignUpRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string",
            "description": "Unique username of the account"
          },
          "first_name": {
            "type": "string",
            "description": "Optional first name"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password for the account"
          }
        }
      },
      "SignInRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "required": ["access_token"],
        "properties": {
          "access_token": {
            "type": "string"
          }
        }
      },
      "InvalidateTokenRequest": {
        "type": "object",
        "required": ["token"],
        "properties": {
          "token": {
            "type": "string"
          }
        }
      },
      "UserIdRequest": {
        "type": "object",
        "required": ["user_id"],
        "properties": {
          "user_id": {
            "type": "integer"
          }
        }
      },
      "TokenPair": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Expires in 15 min"
          },
          "refresh_token": {
            "type": "string",
            "description": "Expires in 7 days"
          }
        }
      },
      "AccessToken": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Expires in 15 min"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Status of request"
          },
          "error": {
            "type": "string",
            "example": "Invalid request data",
            "description": "Error message"
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true,
            "description": "Status of request"
          },
          "message": {
            "type": "string",
            "example": "Invalid request data",
            "description": "Response message"
          }
        }
      },
      "Pong": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "pong"
          }
        }
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ]
}
